#pragma once

typedef enum REQUESTED_ACTION { RA_WAIT, RA_CONTINUE, RA_NEED_MORE, RA_NOT_INTERESTED, RA_BLOCK, RA_ERROR } REQUESTED_ACTION;
typedef enum PROCESSING_STATE { PS_UNKNOWN, PS_HANDSHAKE_LAYER, PS_RECORD_LAYER, PS_CERTIFICATE, PS_DONE, PS_IRRELEVANT, PS_ERROR } PROCESSING_STATE;

#define TB_TLS_HANDSHAKE_IDENTIFIER	0x16
#define TB_TLS_RECORD_HEADER_SIZE 5
#define TB_TLS_HANDSHAKE_IDENTIFIER_SIZE 1
#define TB_TLS_CERTIFICATE_FIELD_SIZE 3

// Handshake type identifiers
#define TYPE_HELLO_REQUEST		0
#define TYPE_CLIENT_HELLO		1
#define TYPE_SERVER_HELLO		2
#define TYPE_CERTIFICATE		11
#define TYPE_SERVER_KEY_EXCHANGE	12
#define TYPE_CERTIFICATE_REQUEST	13
#define TYPE_SERVER_HELLO_DONE		14
#define TYPE_CERTIFICATE_VERIFY		15
#define TYPE_CLIENT_KEY_EXCHANGE	16
#define TYPE_FINISHED			20
// TLS Handshake Extensions
#define TYPE_CERTIFICATE_URL		21
#define TYPE_CERTIFICATE_STATUS		22